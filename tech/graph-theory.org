#+SETUPFILE: https://fniessen.github.io/org-html-themes/setup/theme-readtheorg.setup
#+STARTUP: showall
#+EXPORT_FILE_NAME: ../exports/graph-theory.html

* Introduction

** Basics

*** Graph

A graph is a finite nonempty set V together with an irreflexive symmetirc relation R on V. Since R is symmetric for each ordered pair(u,v) \in R, the pari(v,u) also \in R where
- V is the vertex set
- E is the edges set. Each element of E is a set consisting of symmetric vertices from R called an edge.
- Occasionally it is desirable to denote the vertex set and edge set of a graph G by V(G) and E(G), respectively. This particularly useful when there are 2 or more graphs under consideration.

*** Relations

A relation R on a set X is 
- reflexive if (a,a) \in R, for each a \in X
- irreflexive if (a,b) \in R, for each a \in X and b \in X and a \neq b
- transitive if (a,b) \in R and (b,c) \in R implies (a,c) \in R
- symmetric if (a,b) \in R implies (b,a) \in R

*** Vertices

**** Adjacent Vertices: 
Two vertices are adjacent in a graph if uv \in E(G). Have a common edge.

**** Non Adjacent Vertices:
Two vertices are non adjacent in a graph if uv \notin E(G). Have no common edge.

**** odd vertex
- An odd vertex is an vertex with an odd degree.
- Every graph contains an even number of odd vertices.

**** even vertex
An even vertex is an vertex with an even degree.
**** Connected Vertices
Two vertices /u-v/ in a graph G are connected if u=v, or if u \neq v and u-v path exists in G. A graph G is connected if every 2 vertices of G are connected; otherwise, G is disconnected.
**** Cut Vertices
- A vertex v in a connected graph G is called a cut-vertex if G - v is disconnected.
- If v is a cut-vertex of G then G-v contains 2 or more components
*** Edges

**** Adjacent Edges:
If uv and uw are distinct edges of a graph G (ie., v \neq w), then uv and vw are adjacent edges. Two edges having a common vertex.

**** Incident Vertices to an Edge
If e=uv \in E(G), then u and v are each incident to or incident with e.
**** Bridges (Cut Edges)
- An edge e in a connected graph G is called a Bridge if G - e is disconnected.
- If e is a bridge of G then G - e has exactly 2 components.

*** Metrics
- Order of G = |V|
- Size of G = |E|
- Degree of v in G (deg_{G} v or deg v) = number of edges incident with v
- (p, q) graph is a graph with a order p and size q.
- For any graph G, the sum of the degrees of the vertices of a G equals to twice the number of edges of G. If G is a (p,q) graph with vertices v_{1}, v_{2}, ..., v_{p} then

  \sum_{i=1}^{p} deg v_{i} = 2q

*** Types of Graphs
**** Directed Graph (Diagraph)
- A directed graph is a finite non-empty set V together with an irreflexive relation R on V.
- Each ordered pair in R is referred to as a directed /edge or arc (the word edge is not used in diagraphs)/.

**** Networks
By a network we mean a graph or a diagraph together with a function which maps the edge set into the set of real numbers.

***** Undirected Network.
A network resulting from a graph is called undirected network.

****** Signed Graph
A signed Graph is an undirected network whose functional values are +1 or -1. Since a postive or negative sign is attached to every edge of S.

A neighborhood consists of several families. Two families may be friendly toward each other, unfriendly or may be indifferent toward (or may not even be acquainted with) each other. The situation can be represented by a signed graph S, where the vertices are joined by a positive edge if the corresponding families are friendly, by a negative edge if the corresponding families are unfriendly and by no edge otherwise.

***** Directed Network.
A network resulting from a digraph is called directed network. 

**** Multi Graph
If an undirected network is represented as a set of points in the plane and the points are joined by an integral number of curves or line segments, then the network is called a multigraph. Mutligraph refers to a graph in which multiple edges are permitted or required.
Ex: Let M be a multigraph with edge set E and associated function f. If uv \in E and f(uv)=n, where n is a positive integer, then we say u and v are joined by n edges and we refer to these edges as multiple edges.

**** Loops
In all relations we have considered we assumed irreflexivity. It is quite possible that in the situation where the relation is not irreflexive. In this case we refer to the ordered pair(u,v) as a loop. If we remove the restriction 'irreflexive' in the definition of a graph we call the result a loop-graph.
- Loop graph
- Loop digraph
- Loop networks
- Loop multigraphs (also called pseudo graphs)
**** Complete Graph
A graph is complete if every 2 of its vertices are adjacent

**** r-regular Graph
If every vertex of a graph has a G has the same degree r, we say that G is regular of degree r or is r-regular.

Note: A complete graph of order p is (p-1) regular and is denoted by K_{p}

**** Isomorphic Graphs
- Two equal graphs.
- By isomorphism from G_{1} to G_{2} there is a one to one mapping /\phi/: V(G_{1}) --> V(G_{2}) such that 2 vertices in u_{1} and v_{1} are adjacent in G_{1} if and only if the vertices /\phi/(u_{1}) and /\phi(v_{1}_{}) are adjacent in G_{2}.
- The relation /is isomorphic to/ is an equivalence relation on a set of all graphs.
- If /\phi/ is an isomorphism from G_{1} to G_{2} then the inverse of /\phi/ also satisfies the definition of isomorphism.
- /is isomorphic to/ is a symmetric and transitive.
- If 2 graphs are isomorphic then they have the same order & size but the vice versa is not true.
- If G_{1} and G_{2} are isomorphic graphs, then the degrees of the vertices of G_{1} are exactly the degrees of the vertices of G_{2}. (necessary condition but not sufficient condition for isomorphism)
- /pegionhole-principle/
  - There is only one graph of order one (necessarily having size 0): that is, if G_{1} and G_{2} are both graphs of order one, then they are isomorphic.
  - Similarly if there is only one graph of order 2 and size 0, and only one graph of order 2 and size 1.
  - However there are 3 graphs of order 4 and size 3 which are not isomorphic to one another, but any other graph of order 4 and size 3 should be isomorphic to one of these 3.
  - Definition: Let S be finite set consisting of n elements and let S_{1}, S_{2}, ..., S_{k} be a partition of S into k subsets. Then atleast one subset S_{i}, 1 \le i \leq k, contains at least \lceil n/k \rceil elements.

**** subgraphs
- Let G be a graph. A graph H id a subgraph of G if V(H) \sube V(G) and E(H) \sube E(G). 
- If a graph F is isomorphic to a subgraph H of G, then F is also called a subgraph of G.
***** Component of G
A connected subgraph H of a graph G is called a component of G if H is not contained in any connected subgraph of G having more vertices or edges than H.

**** Connected Graphs
Two vertices /u-v/ in a graph G are connected if u=v, or if u \neq v and u-v path exists in G. A graph G is connected if every 2 vertices of G are connected; otherwise, G is disconnected.

**** Eulerian Graphs
- A graph containing a [[Eulerain circuit][eulerian circuit]] is called a eulerian graph.
- A multigraph containing an eulerian circuit is an eulerain multigraph.
- A mutligraph G is eulerian if and only if G is connected and every vertex of G is even.

**** Traversal Graphs
- If a graph G has a trail, not a circuit containing all vertices and edges of G, then G is called a traversable graph and the trail is called an eulerian trail.
- A multigraph G is traversable if and only if G is connected and has exactly two odd odd vertices. Furthermore, any eulerian trail of G begins at one of the odd vertices and ends at the other odd verticex.
- An interesting property of /Eulerain and Traversal/ graphs is once the vertices have been drawn, we can draw all the edges in one continous motion with lifting the pencil.
*** Traversals

***** uv walk
A /u-v walk/ in G is an alternating sequence of vertices and edges in G, begining with u and ending with v, such that every edge joins the vertices immediately preceding it and following it.

***** uv trail
- A /u-v trail/ in G in a graph is a /u-v walk/ which **doesnot not repeat any edge**.
- A /u-v trail/ in which u=v and which contains at least 3 edges is called circuit.
- A circuit which doesnot repeat any vertices (except the first and the last) is called a cycle.
- A set of vertices and edges determined by a trail produce a subgraph.

***** Eulerain circuit
A circuit containing all the vertices and edges of multigraph M is called an eulerian circuit in M. [[Eulers Solution]]


* Problems

** Konigsberg Bridge Problem
There are 7 bridges which crossed the river. They connected 2 islands in the river with opposite banks. Can we cross the seven bridges in a continous walk without recrossing any of them?
#+ATTR_HTML: width="100"
[[file:images/konigsberg-bridge-problem.png]]

- This is problem of determining whether a multi-graph M in the above figure has a trail (possibly a circuit) containing all edges.

*** Eulers Solution
- The choice of route inside each land mass is irrelevant. The only important feature is the sequence of bridges crossed.
  - Replace the land mass with vertex and bridge with a node.
  - It doesn't matter if the edges drawn are stright or curved or whether if one node is left or right of another.
- Except at endpoints, whenever one enters a vertex by a bridge, one leaves the vertex by a bridge.
  - # of times one enters a non-terminal vertex = # of times one leaves it.
- Now if every bridge is traversed exactly once, it follows that, for each land mass (except for the ones choosen for the start and finish), the number of bridges touching the land mass should be even.
  - However, all four of the land masses in the original problem are touched by an odd number of bridges (one is touched by 5 bridges, and each of the other 3 is touched by 3)
  - Since, at most, two land masses can serve as the endpoints of a walk, the proposition of a walk traversing each bridge once leads to a contradiction.
- There the necessary condition for a walk of a desired form is that the graph be connected and have exactly zero or two nodes of odd degree.

** Eulerain and traversable graphs and multigraphs applications
- useful for solving mazes, puzzels and similar problems.
